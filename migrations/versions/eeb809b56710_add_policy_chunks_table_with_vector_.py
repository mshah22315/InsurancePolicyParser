"""Add policy_chunks table with vector support

Revision ID: eeb809b56710
Revises: 9e1b1a98f79d
Create Date: 2025-06-07 13:16:18.934293

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'eeb809b56710'
down_revision = '9e1b1a98f79d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('processed_policy_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_processed_policy_data_policy_number'))

    op.drop_table('processed_policy_data')
    with op.batch_alter_table('policy_chunks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_policy_chunks_policy_id'))
        batch_op.drop_index(batch_op.f('ix_policy_chunks_section_type'))

    op.drop_table('policy_chunks')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('policy_chunks',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('policy_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('document_source_filename', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('section_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('chunk_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('policy_chunks_pkey'))
    )
    with op.batch_alter_table('policy_chunks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_policy_chunks_section_type'), ['section_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_policy_chunks_policy_id'), ['policy_id'], unique=False)

    op.create_table('processed_policy_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('original_document_gcs_path', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.Column('processed_json_gcs_path', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.Column('policy_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('insurer_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('policyholder_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('property_address', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('effective_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('expiration_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('total_premium', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('coverage_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('raw_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('processed_policy_data_pkey'))
    )
    with op.batch_alter_table('processed_policy_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_processed_policy_data_policy_number'), ['policy_number'], unique=False)

    # ### end Alembic commands ###
